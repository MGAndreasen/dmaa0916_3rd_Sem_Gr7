//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Booking.Client.BookingServiceRemote {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CPRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CPR {
            get {
                return this.CPRField;
            }
            set {
                if ((this.CPRField.Equals(value) != true)) {
                    this.CPRField = value;
                    this.RaisePropertyChanged("CPR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Confirmed {
            get {
                return this.ConfirmedField;
            }
            set {
                if ((this.ConfirmedField.Equals(value) != true)) {
                    this.ConfirmedField = value;
                    this.RaisePropertyChanged("Confirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((this.ZipcodeField.Equals(value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bookings", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Bookings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.Destination EndDestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.Payment PaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.Destination StartDestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.Destination EndDestination {
            get {
                return this.EndDestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDestinationField, value) != true)) {
                    this.EndDestinationField = value;
                    this.RaisePropertyChanged("EndDestination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.Payment Payment {
            get {
                return this.PaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentField, value) != true)) {
                    this.PaymentField = value;
                    this.RaisePropertyChanged("Payment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.Destination StartDestination {
            get {
                return this.StartDestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDestinationField, value) != true)) {
                    this.StartDestinationField = value;
                    this.RaisePropertyChanged("StartDestination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Destination", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Destination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameDestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.Plane PlaneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameDestination {
            get {
                return this.NameDestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.NameDestinationField, value) != true)) {
                    this.NameDestinationField = value;
                    this.RaisePropertyChanged("NameDestination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.Plane Plane {
            get {
                return this.PlaneField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaneField, value) != true)) {
                    this.PlaneField = value;
                    this.RaisePropertyChanged("Plane");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plane", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Plane : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.SeatSchema SeatSchemaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.SeatSchema SeatSchema {
            get {
                return this.SeatSchemaField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatSchemaField, value) != true)) {
                    this.SeatSchemaField = value;
                    this.RaisePropertyChanged("SeatSchema");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeatSchema", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class SeatSchema : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LayoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Layout {
            get {
                return this.LayoutField;
            }
            set {
                if ((object.ReferenceEquals(this.LayoutField, value) != true)) {
                    this.LayoutField = value;
                    this.RaisePropertyChanged("Layout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Passenger", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Passenger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.Bookings BookingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CPRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LuggageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PassportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.Seat SeatNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.Bookings Booking {
            get {
                return this.BookingField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingField, value) != true)) {
                    this.BookingField = value;
                    this.RaisePropertyChanged("Booking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CPR {
            get {
                return this.CPRField;
            }
            set {
                if ((this.CPRField.Equals(value) != true)) {
                    this.CPRField = value;
                    this.RaisePropertyChanged("CPR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Luggage {
            get {
                return this.LuggageField;
            }
            set {
                if ((this.LuggageField.Equals(value) != true)) {
                    this.LuggageField = value;
                    this.RaisePropertyChanged("Luggage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PassportId {
            get {
                return this.PassportIdField;
            }
            set {
                if ((this.PassportIdField.Equals(value) != true)) {
                    this.PassportIdField = value;
                    this.RaisePropertyChanged("PassportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.Seat SeatNumber {
            get {
                return this.SeatNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatNumberField, value) != true)) {
                    this.SeatNumberField = value;
                    this.RaisePropertyChanged("SeatNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Seat", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Seat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.Row RowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.Row Row {
            get {
                return this.RowField;
            }
            set {
                if ((object.ReferenceEquals(this.RowField, value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Row", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Row : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.SeatSchema SeatNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.SeatSchema SeatNumber {
            get {
                return this.SeatNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatNumberField, value) != true)) {
                    this.SeatNumberField = value;
                    this.RaisePropertyChanged("SeatNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/Booking.Models")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Booking.Client.BookingServiceRemote.Passenger PassengerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Booking.Client.BookingServiceRemote.Passenger Passenger {
            get {
                return this.PassengerField;
            }
            set {
                if ((object.ReferenceEquals(this.PassengerField, value) != true)) {
                    this.PassengerField = value;
                    this.RaisePropertyChanged("Passenger");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookingServiceRemote.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Post", ReplyAction="http://tempuri.org/IService/PostResponse")]
        Booking.Client.BookingServiceRemote.PostResponse Post(Booking.Client.BookingServiceRemote.PostRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Post", ReplyAction="http://tempuri.org/IService/PostResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.PostResponse> PostAsync(Booking.Client.BookingServiceRemote.PostRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoute", ReplyAction="http://tempuri.org/IService/GetRouteResponse")]
        Booking.Client.BookingServiceRemote.GetRouteResponse GetRoute(Booking.Client.BookingServiceRemote.GetRouteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoute", ReplyAction="http://tempuri.org/IService/GetRouteResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetRouteResponse> GetRouteAsync(Booking.Client.BookingServiceRemote.GetRouteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCustomer", ReplyAction="http://tempuri.org/IService/CreateCustomerResponse")]
        Booking.Client.BookingServiceRemote.CreateCustomerResponse CreateCustomer(Booking.Client.BookingServiceRemote.CreateCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCustomer", ReplyAction="http://tempuri.org/IService/CreateCustomerResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateCustomerResponse> CreateCustomerAsync(Booking.Client.BookingServiceRemote.CreateCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomer", ReplyAction="http://tempuri.org/IService/GetCustomerResponse")]
        Booking.Client.BookingServiceRemote.GetCustomerResponse GetCustomer(Booking.Client.BookingServiceRemote.GetCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomer", ReplyAction="http://tempuri.org/IService/GetCustomerResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetCustomerResponse> GetCustomerAsync(Booking.Client.BookingServiceRemote.GetCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCustomer", ReplyAction="http://tempuri.org/IService/UpdateCustomerResponse")]
        Booking.Client.BookingServiceRemote.UpdateCustomerResponse UpdateCustomer(Booking.Client.BookingServiceRemote.UpdateCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCustomer", ReplyAction="http://tempuri.org/IService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateCustomerResponse> UpdateCustomerAsync(Booking.Client.BookingServiceRemote.UpdateCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCustomer", ReplyAction="http://tempuri.org/IService/DeleteCustomerResponse")]
        Booking.Client.BookingServiceRemote.DeleteCustomerResponse DeleteCustomer(Booking.Client.BookingServiceRemote.DeleteCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCustomer", ReplyAction="http://tempuri.org/IService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteCustomerResponse> DeleteCustomerAsync(Booking.Client.BookingServiceRemote.DeleteCustomerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllCustomers", ReplyAction="http://tempuri.org/IService/GetAllCustomersResponse")]
        Booking.Client.BookingServiceRemote.GetAllCustomersResponse GetAllCustomers(Booking.Client.BookingServiceRemote.GetAllCustomersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllCustomers", ReplyAction="http://tempuri.org/IService/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetAllCustomersResponse> GetAllCustomersAsync(Booking.Client.BookingServiceRemote.GetAllCustomersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBooking", ReplyAction="http://tempuri.org/IService/CreateBookingResponse")]
        Booking.Client.BookingServiceRemote.CreateBookingResponse CreateBooking(Booking.Client.BookingServiceRemote.CreateBookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateBooking", ReplyAction="http://tempuri.org/IService/CreateBookingResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateBookingResponse> CreateBookingAsync(Booking.Client.BookingServiceRemote.CreateBookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBooking", ReplyAction="http://tempuri.org/IService/GetBookingResponse")]
        Booking.Client.BookingServiceRemote.GetBookingResponse GetBooking(Booking.Client.BookingServiceRemote.GetBookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBooking", ReplyAction="http://tempuri.org/IService/GetBookingResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetBookingResponse> GetBookingAsync(Booking.Client.BookingServiceRemote.GetBookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateBooking", ReplyAction="http://tempuri.org/IService/UpdateBookingResponse")]
        Booking.Client.BookingServiceRemote.UpdateBookingResponse UpdateBooking(Booking.Client.BookingServiceRemote.UpdateBookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateBooking", ReplyAction="http://tempuri.org/IService/UpdateBookingResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateBookingResponse> UpdateBookingAsync(Booking.Client.BookingServiceRemote.UpdateBookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBooking", ReplyAction="http://tempuri.org/IService/DeleteBookingResponse")]
        Booking.Client.BookingServiceRemote.DeleteBookingResponse DeleteBooking(Booking.Client.BookingServiceRemote.DeleteBookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteBooking", ReplyAction="http://tempuri.org/IService/DeleteBookingResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteBookingResponse> DeleteBookingAsync(Booking.Client.BookingServiceRemote.DeleteBookingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCity", ReplyAction="http://tempuri.org/IService/CreateCityResponse")]
        Booking.Client.BookingServiceRemote.CreateCityResponse CreateCity(Booking.Client.BookingServiceRemote.CreateCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCity", ReplyAction="http://tempuri.org/IService/CreateCityResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateCityResponse> CreateCityAsync(Booking.Client.BookingServiceRemote.CreateCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCity", ReplyAction="http://tempuri.org/IService/GetCityResponse")]
        Booking.Client.BookingServiceRemote.GetCityResponse GetCity(Booking.Client.BookingServiceRemote.GetCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCity", ReplyAction="http://tempuri.org/IService/GetCityResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetCityResponse> GetCityAsync(Booking.Client.BookingServiceRemote.GetCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCity", ReplyAction="http://tempuri.org/IService/UpdateCityResponse")]
        Booking.Client.BookingServiceRemote.UpdateCityResponse UpdateCity(Booking.Client.BookingServiceRemote.UpdateCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCity", ReplyAction="http://tempuri.org/IService/UpdateCityResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateCityResponse> UpdateCityAsync(Booking.Client.BookingServiceRemote.UpdateCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCity", ReplyAction="http://tempuri.org/IService/DeleteCityResponse")]
        Booking.Client.BookingServiceRemote.DeleteCityResponse DeleteCity(Booking.Client.BookingServiceRemote.DeleteCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCity", ReplyAction="http://tempuri.org/IService/DeleteCityResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteCityResponse> DeleteCityAsync(Booking.Client.BookingServiceRemote.DeleteCityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateDestination", ReplyAction="http://tempuri.org/IService/CreateDestinationResponse")]
        Booking.Client.BookingServiceRemote.CreateDestinationResponse CreateDestination(Booking.Client.BookingServiceRemote.CreateDestinationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateDestination", ReplyAction="http://tempuri.org/IService/CreateDestinationResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateDestinationResponse> CreateDestinationAsync(Booking.Client.BookingServiceRemote.CreateDestinationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDestination", ReplyAction="http://tempuri.org/IService/GetDestinationResponse")]
        Booking.Client.BookingServiceRemote.GetDestinationResponse GetDestination(Booking.Client.BookingServiceRemote.GetDestinationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDestination", ReplyAction="http://tempuri.org/IService/GetDestinationResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetDestinationResponse> GetDestinationAsync(Booking.Client.BookingServiceRemote.GetDestinationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateDestination", ReplyAction="http://tempuri.org/IService/UpdateDestinationResponse")]
        Booking.Client.BookingServiceRemote.UpdateDestinationResponse UpdateDestination(Booking.Client.BookingServiceRemote.UpdateDestinationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateDestination", ReplyAction="http://tempuri.org/IService/UpdateDestinationResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateDestinationResponse> UpdateDestinationAsync(Booking.Client.BookingServiceRemote.UpdateDestinationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteDestination", ReplyAction="http://tempuri.org/IService/DeleteDestinationResponse")]
        Booking.Client.BookingServiceRemote.DeleteDestinationResponse DeleteDestination(Booking.Client.BookingServiceRemote.DeleteDestinationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteDestination", ReplyAction="http://tempuri.org/IService/DeleteDestinationResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteDestinationResponse> DeleteDestinationAsync(Booking.Client.BookingServiceRemote.DeleteDestinationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDestinations", ReplyAction="http://tempuri.org/IService/GetAllDestinationsResponse")]
        Booking.Client.BookingServiceRemote.GetAllDestinationsResponse GetAllDestinations(Booking.Client.BookingServiceRemote.GetAllDestinationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDestinations", ReplyAction="http://tempuri.org/IService/GetAllDestinationsResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetAllDestinationsResponse> GetAllDestinationsAsync(Booking.Client.BookingServiceRemote.GetAllDestinationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePassenger", ReplyAction="http://tempuri.org/IService/CreatePassengerResponse")]
        Booking.Client.BookingServiceRemote.CreatePassengerResponse CreatePassenger(Booking.Client.BookingServiceRemote.CreatePassengerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePassenger", ReplyAction="http://tempuri.org/IService/CreatePassengerResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreatePassengerResponse> CreatePassengerAsync(Booking.Client.BookingServiceRemote.CreatePassengerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPassenger", ReplyAction="http://tempuri.org/IService/GetPassengerResponse")]
        Booking.Client.BookingServiceRemote.GetPassengerResponse GetPassenger(Booking.Client.BookingServiceRemote.GetPassengerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPassenger", ReplyAction="http://tempuri.org/IService/GetPassengerResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetPassengerResponse> GetPassengerAsync(Booking.Client.BookingServiceRemote.GetPassengerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePassenger", ReplyAction="http://tempuri.org/IService/UpdatePassengerResponse")]
        Booking.Client.BookingServiceRemote.UpdatePassengerResponse UpdatePassenger(Booking.Client.BookingServiceRemote.UpdatePassengerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePassenger", ReplyAction="http://tempuri.org/IService/UpdatePassengerResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdatePassengerResponse> UpdatePassengerAsync(Booking.Client.BookingServiceRemote.UpdatePassengerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePassenger", ReplyAction="http://tempuri.org/IService/DeletePassengerResponse")]
        Booking.Client.BookingServiceRemote.DeletePassengerResponse DeletePassenger(Booking.Client.BookingServiceRemote.DeletePassengerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePassenger", ReplyAction="http://tempuri.org/IService/DeletePassengerResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeletePassengerResponse> DeletePassengerAsync(Booking.Client.BookingServiceRemote.DeletePassengerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPassengers", ReplyAction="http://tempuri.org/IService/GetAllPassengersResponse")]
        Booking.Client.BookingServiceRemote.GetAllPassengersResponse GetAllPassengers(Booking.Client.BookingServiceRemote.GetAllPassengersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPassengers", ReplyAction="http://tempuri.org/IService/GetAllPassengersResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetAllPassengersResponse> GetAllPassengersAsync(Booking.Client.BookingServiceRemote.GetAllPassengersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePayment", ReplyAction="http://tempuri.org/IService/CreatePaymentResponse")]
        Booking.Client.BookingServiceRemote.CreatePaymentResponse CreatePayment(Booking.Client.BookingServiceRemote.CreatePaymentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePayment", ReplyAction="http://tempuri.org/IService/CreatePaymentResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreatePaymentResponse> CreatePaymentAsync(Booking.Client.BookingServiceRemote.CreatePaymentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPayment", ReplyAction="http://tempuri.org/IService/GetPaymentResponse")]
        Booking.Client.BookingServiceRemote.GetPaymentResponse GetPayment(Booking.Client.BookingServiceRemote.GetPaymentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPayment", ReplyAction="http://tempuri.org/IService/GetPaymentResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetPaymentResponse> GetPaymentAsync(Booking.Client.BookingServiceRemote.GetPaymentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePayment", ReplyAction="http://tempuri.org/IService/UpdatePaymentResponse")]
        Booking.Client.BookingServiceRemote.UpdatePaymentResponse UpdatePayment(Booking.Client.BookingServiceRemote.UpdatePaymentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePayment", ReplyAction="http://tempuri.org/IService/UpdatePaymentResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdatePaymentResponse> UpdatePaymentAsync(Booking.Client.BookingServiceRemote.UpdatePaymentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePayment", ReplyAction="http://tempuri.org/IService/DeletePaymentResponse")]
        Booking.Client.BookingServiceRemote.DeletePaymentResponse DeletePayment(Booking.Client.BookingServiceRemote.DeletePaymentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePayment", ReplyAction="http://tempuri.org/IService/DeletePaymentResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeletePaymentResponse> DeletePaymentAsync(Booking.Client.BookingServiceRemote.DeletePaymentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePlane", ReplyAction="http://tempuri.org/IService/CreatePlaneResponse")]
        Booking.Client.BookingServiceRemote.CreatePlaneResponse CreatePlane(Booking.Client.BookingServiceRemote.CreatePlaneRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePlane", ReplyAction="http://tempuri.org/IService/CreatePlaneResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreatePlaneResponse> CreatePlaneAsync(Booking.Client.BookingServiceRemote.CreatePlaneRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPlane", ReplyAction="http://tempuri.org/IService/GetPlaneResponse")]
        Booking.Client.BookingServiceRemote.GetPlaneResponse GetPlane(Booking.Client.BookingServiceRemote.GetPlaneRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPlane", ReplyAction="http://tempuri.org/IService/GetPlaneResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetPlaneResponse> GetPlaneAsync(Booking.Client.BookingServiceRemote.GetPlaneRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePlane", ReplyAction="http://tempuri.org/IService/UpdatePlaneResponse")]
        Booking.Client.BookingServiceRemote.UpdatePlaneResponse UpdatePlane(Booking.Client.BookingServiceRemote.UpdatePlaneRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePlane", ReplyAction="http://tempuri.org/IService/UpdatePlaneResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdatePlaneResponse> UpdatePlaneAsync(Booking.Client.BookingServiceRemote.UpdatePlaneRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePlane", ReplyAction="http://tempuri.org/IService/DeletePlaneResponse")]
        Booking.Client.BookingServiceRemote.DeletePlaneResponse DeletePlane(Booking.Client.BookingServiceRemote.DeletePlaneRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePlane", ReplyAction="http://tempuri.org/IService/DeletePlaneResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeletePlaneResponse> DeletePlaneAsync(Booking.Client.BookingServiceRemote.DeletePlaneRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPlanes", ReplyAction="http://tempuri.org/IService/GetAllPlanesResponse")]
        Booking.Client.BookingServiceRemote.GetAllPlanesResponse GetAllPlanes(Booking.Client.BookingServiceRemote.GetAllPlanesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPlanes", ReplyAction="http://tempuri.org/IService/GetAllPlanesResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetAllPlanesResponse> GetAllPlanesAsync(Booking.Client.BookingServiceRemote.GetAllPlanesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateRow", ReplyAction="http://tempuri.org/IService/CreateRowResponse")]
        Booking.Client.BookingServiceRemote.CreateRowResponse CreateRow(Booking.Client.BookingServiceRemote.CreateRowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateRow", ReplyAction="http://tempuri.org/IService/CreateRowResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateRowResponse> CreateRowAsync(Booking.Client.BookingServiceRemote.CreateRowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRow", ReplyAction="http://tempuri.org/IService/GetRowResponse")]
        Booking.Client.BookingServiceRemote.GetRowResponse GetRow(Booking.Client.BookingServiceRemote.GetRowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRow", ReplyAction="http://tempuri.org/IService/GetRowResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetRowResponse> GetRowAsync(Booking.Client.BookingServiceRemote.GetRowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateRow", ReplyAction="http://tempuri.org/IService/UpdateRowResponse")]
        Booking.Client.BookingServiceRemote.UpdateRowResponse UpdateRow(Booking.Client.BookingServiceRemote.UpdateRowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateRow", ReplyAction="http://tempuri.org/IService/UpdateRowResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateRowResponse> UpdateRowAsync(Booking.Client.BookingServiceRemote.UpdateRowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteRow", ReplyAction="http://tempuri.org/IService/DeleteRowResponse")]
        Booking.Client.BookingServiceRemote.DeleteRowResponse DeleteRow(Booking.Client.BookingServiceRemote.DeleteRowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteRow", ReplyAction="http://tempuri.org/IService/DeleteRowResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteRowResponse> DeleteRowAsync(Booking.Client.BookingServiceRemote.DeleteRowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeat", ReplyAction="http://tempuri.org/IService/CreateSeatResponse")]
        Booking.Client.BookingServiceRemote.CreateSeatResponse CreateSeat(Booking.Client.BookingServiceRemote.CreateSeatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeat", ReplyAction="http://tempuri.org/IService/CreateSeatResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateSeatResponse> CreateSeatAsync(Booking.Client.BookingServiceRemote.CreateSeatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSeat", ReplyAction="http://tempuri.org/IService/GetSeatResponse")]
        Booking.Client.BookingServiceRemote.GetSeatResponse GetSeat(Booking.Client.BookingServiceRemote.GetSeatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSeat", ReplyAction="http://tempuri.org/IService/GetSeatResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetSeatResponse> GetSeatAsync(Booking.Client.BookingServiceRemote.GetSeatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSeat", ReplyAction="http://tempuri.org/IService/UpdateSeatResponse")]
        Booking.Client.BookingServiceRemote.UpdateSeatResponse UpdateSeat(Booking.Client.BookingServiceRemote.UpdateSeatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSeat", ReplyAction="http://tempuri.org/IService/UpdateSeatResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateSeatResponse> UpdateSeatAsync(Booking.Client.BookingServiceRemote.UpdateSeatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeat", ReplyAction="http://tempuri.org/IService/DeleteSeatResponse")]
        Booking.Client.BookingServiceRemote.DeleteSeatResponse DeleteSeat(Booking.Client.BookingServiceRemote.DeleteSeatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeat", ReplyAction="http://tempuri.org/IService/DeleteSeatResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteSeatResponse> DeleteSeatAsync(Booking.Client.BookingServiceRemote.DeleteSeatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeatSchema", ReplyAction="http://tempuri.org/IService/CreateSeatSchemaResponse")]
        Booking.Client.BookingServiceRemote.CreateSeatSchemaResponse CreateSeatSchema(Booking.Client.BookingServiceRemote.CreateSeatSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateSeatSchema", ReplyAction="http://tempuri.org/IService/CreateSeatSchemaResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateSeatSchemaResponse> CreateSeatSchemaAsync(Booking.Client.BookingServiceRemote.CreateSeatSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSetSchema", ReplyAction="http://tempuri.org/IService/GetSetSchemaResponse")]
        Booking.Client.BookingServiceRemote.GetSetSchemaResponse GetSetSchema(Booking.Client.BookingServiceRemote.GetSetSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSetSchema", ReplyAction="http://tempuri.org/IService/GetSetSchemaResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetSetSchemaResponse> GetSetSchemaAsync(Booking.Client.BookingServiceRemote.GetSetSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSeatSchema", ReplyAction="http://tempuri.org/IService/UpdateSeatSchemaResponse")]
        Booking.Client.BookingServiceRemote.UpdateSeatSchemaResponse UpdateSeatSchema(Booking.Client.BookingServiceRemote.UpdateSeatSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSeatSchema", ReplyAction="http://tempuri.org/IService/UpdateSeatSchemaResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateSeatSchemaResponse> UpdateSeatSchemaAsync(Booking.Client.BookingServiceRemote.UpdateSeatSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeatSchema", ReplyAction="http://tempuri.org/IService/DeleteSeatSchemaResponse")]
        Booking.Client.BookingServiceRemote.DeleteSeatSchemaResponse DeleteSeatSchema(Booking.Client.BookingServiceRemote.DeleteSeatSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSeatSchema", ReplyAction="http://tempuri.org/IService/DeleteSeatSchemaResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteSeatSchemaResponse> DeleteSeatSchemaAsync(Booking.Client.BookingServiceRemote.DeleteSeatSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateTicket", ReplyAction="http://tempuri.org/IService/CreateTicketResponse")]
        Booking.Client.BookingServiceRemote.CreateTicketResponse CreateTicket(Booking.Client.BookingServiceRemote.CreateTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateTicket", ReplyAction="http://tempuri.org/IService/CreateTicketResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateTicketResponse> CreateTicketAsync(Booking.Client.BookingServiceRemote.CreateTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTicket", ReplyAction="http://tempuri.org/IService/GetTicketResponse")]
        Booking.Client.BookingServiceRemote.GetTicketResponse GetTicket(Booking.Client.BookingServiceRemote.GetTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTicket", ReplyAction="http://tempuri.org/IService/GetTicketResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetTicketResponse> GetTicketAsync(Booking.Client.BookingServiceRemote.GetTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateTicket", ReplyAction="http://tempuri.org/IService/UpdateTicketResponse")]
        Booking.Client.BookingServiceRemote.UpdateTicketResponse UpdateTicket(Booking.Client.BookingServiceRemote.UpdateTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateTicket", ReplyAction="http://tempuri.org/IService/UpdateTicketResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateTicketResponse> UpdateTicketAsync(Booking.Client.BookingServiceRemote.UpdateTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTicket", ReplyAction="http://tempuri.org/IService/DeleteTicketResponse")]
        Booking.Client.BookingServiceRemote.DeleteTicketResponse DeleteTicket(Booking.Client.BookingServiceRemote.DeleteTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTicket", ReplyAction="http://tempuri.org/IService/DeleteTicketResponse")]
        System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteTicketResponse> DeleteTicketAsync(Booking.Client.BookingServiceRemote.DeleteTicketRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Post", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PostRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string s;
        
        public PostRequest() {
        }
        
        public PostRequest(string s) {
            this.s = s;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PostResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PostResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PostResult;
        
        public PostResponse() {
        }
        
        public PostResponse(string PostResult) {
            this.PostResult = PostResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRoute", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRouteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string id;
        
        public GetRouteRequest() {
        }
        
        public GetRouteRequest(string id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRouteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRouteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] GetRouteResult;
        
        public GetRouteResponse() {
        }
        
        public GetRouteResponse(string[] GetRouteResult) {
            this.GetRouteResult = GetRouteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCustomer", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Customer obj;
        
        public CreateCustomerRequest() {
        }
        
        public CreateCustomerRequest(Booking.Client.BookingServiceRemote.Customer obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCustomerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateCustomerResponse {
        
        public CreateCustomerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomer", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetCustomerRequest() {
        }
        
        public GetCustomerRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCustomerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Customer GetCustomerResult;
        
        public GetCustomerResponse() {
        }
        
        public GetCustomerResponse(Booking.Client.BookingServiceRemote.Customer GetCustomerResult) {
            this.GetCustomerResult = GetCustomerResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCustomer", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Customer obj;
        
        public UpdateCustomerRequest() {
        }
        
        public UpdateCustomerRequest(Booking.Client.BookingServiceRemote.Customer obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCustomerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateCustomerResponse {
        
        public UpdateCustomerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCustomer", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteCustomerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeleteCustomerRequest() {
        }
        
        public DeleteCustomerRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCustomerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteCustomerResponse {
        
        public DeleteCustomerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllCustomers", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllCustomersRequest {
        
        public GetAllCustomersRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllCustomersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllCustomersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Customer[] GetAllCustomersResult;
        
        public GetAllCustomersResponse() {
        }
        
        public GetAllCustomersResponse(Booking.Client.BookingServiceRemote.Customer[] GetAllCustomersResult) {
            this.GetAllCustomersResult = GetAllCustomersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateBooking", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateBookingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Bookings obj;
        
        public CreateBookingRequest() {
        }
        
        public CreateBookingRequest(Booking.Client.BookingServiceRemote.Bookings obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateBookingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateBookingResponse {
        
        public CreateBookingResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBooking", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBookingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetBookingRequest() {
        }
        
        public GetBookingRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBookingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBookingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Bookings GetBookingResult;
        
        public GetBookingResponse() {
        }
        
        public GetBookingResponse(Booking.Client.BookingServiceRemote.Bookings GetBookingResult) {
            this.GetBookingResult = GetBookingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateBooking", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateBookingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Bookings obj;
        
        public UpdateBookingRequest() {
        }
        
        public UpdateBookingRequest(Booking.Client.BookingServiceRemote.Bookings obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateBookingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateBookingResponse {
        
        public UpdateBookingResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteBooking", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteBookingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeleteBookingRequest() {
        }
        
        public DeleteBookingRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteBookingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteBookingResponse {
        
        public DeleteBookingResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCity", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateCityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.City obj;
        
        public CreateCityRequest() {
        }
        
        public CreateCityRequest(Booking.Client.BookingServiceRemote.City obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCityResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateCityResponse {
        
        public CreateCityResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCity", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetCityRequest() {
        }
        
        public GetCityRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCityResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.City GetCityResult;
        
        public GetCityResponse() {
        }
        
        public GetCityResponse(Booking.Client.BookingServiceRemote.City GetCityResult) {
            this.GetCityResult = GetCityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCity", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateCityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.City obj;
        
        public UpdateCityRequest() {
        }
        
        public UpdateCityRequest(Booking.Client.BookingServiceRemote.City obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCityResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateCityResponse {
        
        public UpdateCityResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCity", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteCityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeleteCityRequest() {
        }
        
        public DeleteCityRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCityResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteCityResponse {
        
        public DeleteCityResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDestination", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateDestinationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Destination obj;
        
        public CreateDestinationRequest() {
        }
        
        public CreateDestinationRequest(Booking.Client.BookingServiceRemote.Destination obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDestinationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateDestinationResponse {
        
        public CreateDestinationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDestination", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDestinationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetDestinationRequest() {
        }
        
        public GetDestinationRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDestinationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDestinationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Destination GetDestinationResult;
        
        public GetDestinationResponse() {
        }
        
        public GetDestinationResponse(Booking.Client.BookingServiceRemote.Destination GetDestinationResult) {
            this.GetDestinationResult = GetDestinationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDestination", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateDestinationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Destination obj;
        
        public UpdateDestinationRequest() {
        }
        
        public UpdateDestinationRequest(Booking.Client.BookingServiceRemote.Destination obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDestinationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateDestinationResponse {
        
        public UpdateDestinationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteDestination", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteDestinationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeleteDestinationRequest() {
        }
        
        public DeleteDestinationRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteDestinationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteDestinationResponse {
        
        public DeleteDestinationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllDestinations", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllDestinationsRequest {
        
        public GetAllDestinationsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllDestinationsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllDestinationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Destination[] GetAllDestinationsResult;
        
        public GetAllDestinationsResponse() {
        }
        
        public GetAllDestinationsResponse(Booking.Client.BookingServiceRemote.Destination[] GetAllDestinationsResult) {
            this.GetAllDestinationsResult = GetAllDestinationsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePassenger", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreatePassengerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Passenger obj;
        
        public CreatePassengerRequest() {
        }
        
        public CreatePassengerRequest(Booking.Client.BookingServiceRemote.Passenger obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePassengerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreatePassengerResponse {
        
        public CreatePassengerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPassenger", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPassengerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetPassengerRequest() {
        }
        
        public GetPassengerRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPassengerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPassengerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Passenger GetPassengerResult;
        
        public GetPassengerResponse() {
        }
        
        public GetPassengerResponse(Booking.Client.BookingServiceRemote.Passenger GetPassengerResult) {
            this.GetPassengerResult = GetPassengerResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePassenger", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePassengerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Passenger obj;
        
        public UpdatePassengerRequest() {
        }
        
        public UpdatePassengerRequest(Booking.Client.BookingServiceRemote.Passenger obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePassengerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePassengerResponse {
        
        public UpdatePassengerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePassenger", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePassengerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeletePassengerRequest() {
        }
        
        public DeletePassengerRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePassengerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePassengerResponse {
        
        public DeletePassengerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPassengers", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllPassengersRequest {
        
        public GetAllPassengersRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPassengersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllPassengersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Passenger[] GetAllPassengersResult;
        
        public GetAllPassengersResponse() {
        }
        
        public GetAllPassengersResponse(Booking.Client.BookingServiceRemote.Passenger[] GetAllPassengersResult) {
            this.GetAllPassengersResult = GetAllPassengersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePayment", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreatePaymentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Payment obj;
        
        public CreatePaymentRequest() {
        }
        
        public CreatePaymentRequest(Booking.Client.BookingServiceRemote.Payment obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePaymentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreatePaymentResponse {
        
        public CreatePaymentResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPayment", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPaymentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetPaymentRequest() {
        }
        
        public GetPaymentRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPaymentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPaymentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Payment GetPaymentResult;
        
        public GetPaymentResponse() {
        }
        
        public GetPaymentResponse(Booking.Client.BookingServiceRemote.Payment GetPaymentResult) {
            this.GetPaymentResult = GetPaymentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePayment", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePaymentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Payment obj;
        
        public UpdatePaymentRequest() {
        }
        
        public UpdatePaymentRequest(Booking.Client.BookingServiceRemote.Payment obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePaymentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePaymentResponse {
        
        public UpdatePaymentResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePayment", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePaymentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeletePaymentRequest() {
        }
        
        public DeletePaymentRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePaymentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePaymentResponse {
        
        public DeletePaymentResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePlane", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreatePlaneRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Plane obj;
        
        public CreatePlaneRequest() {
        }
        
        public CreatePlaneRequest(Booking.Client.BookingServiceRemote.Plane obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreatePlaneResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreatePlaneResponse {
        
        public CreatePlaneResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPlane", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPlaneRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetPlaneRequest() {
        }
        
        public GetPlaneRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPlaneResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPlaneResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Plane GetPlaneResult;
        
        public GetPlaneResponse() {
        }
        
        public GetPlaneResponse(Booking.Client.BookingServiceRemote.Plane GetPlaneResult) {
            this.GetPlaneResult = GetPlaneResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePlane", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePlaneRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Plane obj;
        
        public UpdatePlaneRequest() {
        }
        
        public UpdatePlaneRequest(Booking.Client.BookingServiceRemote.Plane obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePlaneResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePlaneResponse {
        
        public UpdatePlaneResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePlane", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePlaneRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeletePlaneRequest() {
        }
        
        public DeletePlaneRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePlaneResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeletePlaneResponse {
        
        public DeletePlaneResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPlanes", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllPlanesRequest {
        
        public GetAllPlanesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPlanesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllPlanesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Plane[] GetAllPlanesResult;
        
        public GetAllPlanesResponse() {
        }
        
        public GetAllPlanesResponse(Booking.Client.BookingServiceRemote.Plane[] GetAllPlanesResult) {
            this.GetAllPlanesResult = GetAllPlanesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateRow", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateRowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Row obj;
        
        public CreateRowRequest() {
        }
        
        public CreateRowRequest(Booking.Client.BookingServiceRemote.Row obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateRowResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateRowResponse {
        
        public CreateRowResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRow", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetRowRequest() {
        }
        
        public GetRowRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Row GetRowResult;
        
        public GetRowResponse() {
        }
        
        public GetRowResponse(Booking.Client.BookingServiceRemote.Row GetRowResult) {
            this.GetRowResult = GetRowResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateRow", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateRowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Row obj;
        
        public UpdateRowRequest() {
        }
        
        public UpdateRowRequest(Booking.Client.BookingServiceRemote.Row obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateRowResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateRowResponse {
        
        public UpdateRowResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteRow", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteRowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeleteRowRequest() {
        }
        
        public DeleteRowRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteRowResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteRowResponse {
        
        public DeleteRowResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSeat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateSeatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Seat obj;
        
        public CreateSeatRequest() {
        }
        
        public CreateSeatRequest(Booking.Client.BookingServiceRemote.Seat obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSeatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateSeatResponse {
        
        public CreateSeatResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSeat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSeatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetSeatRequest() {
        }
        
        public GetSeatRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSeatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSeatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Seat GetSeatResult;
        
        public GetSeatResponse() {
        }
        
        public GetSeatResponse(Booking.Client.BookingServiceRemote.Seat GetSeatResult) {
            this.GetSeatResult = GetSeatResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSeat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSeatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Seat obj;
        
        public UpdateSeatRequest() {
        }
        
        public UpdateSeatRequest(Booking.Client.BookingServiceRemote.Seat obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSeatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSeatResponse {
        
        public UpdateSeatResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSeat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteSeatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeleteSeatRequest() {
        }
        
        public DeleteSeatRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSeatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteSeatResponse {
        
        public DeleteSeatResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSeatSchema", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateSeatSchemaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.SeatSchema obj;
        
        public CreateSeatSchemaRequest() {
        }
        
        public CreateSeatSchemaRequest(Booking.Client.BookingServiceRemote.SeatSchema obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSeatSchemaResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateSeatSchemaResponse {
        
        public CreateSeatSchemaResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSetSchema", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSetSchemaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetSetSchemaRequest() {
        }
        
        public GetSetSchemaRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSetSchemaResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSetSchemaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.SeatSchema GetSetSchemaResult;
        
        public GetSetSchemaResponse() {
        }
        
        public GetSetSchemaResponse(Booking.Client.BookingServiceRemote.SeatSchema GetSetSchemaResult) {
            this.GetSetSchemaResult = GetSetSchemaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSeatSchema", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSeatSchemaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.SeatSchema obj;
        
        public UpdateSeatSchemaRequest() {
        }
        
        public UpdateSeatSchemaRequest(Booking.Client.BookingServiceRemote.SeatSchema obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSeatSchemaResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSeatSchemaResponse {
        
        public UpdateSeatSchemaResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSeatSchema", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteSeatSchemaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeleteSeatSchemaRequest() {
        }
        
        public DeleteSeatSchemaRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteSeatSchemaResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteSeatSchemaResponse {
        
        public DeleteSeatSchemaResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTicket", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateTicketRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Ticket obj;
        
        public CreateTicketRequest() {
        }
        
        public CreateTicketRequest(Booking.Client.BookingServiceRemote.Ticket obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTicketResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateTicketResponse {
        
        public CreateTicketResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTicket", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTicketRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public GetTicketRequest() {
        }
        
        public GetTicketRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTicketResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTicketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Ticket GetTicketResult;
        
        public GetTicketResponse() {
        }
        
        public GetTicketResponse(Booking.Client.BookingServiceRemote.Ticket GetTicketResult) {
            this.GetTicketResult = GetTicketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicket", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Booking.Client.BookingServiceRemote.Ticket obj;
        
        public UpdateTicketRequest() {
        }
        
        public UpdateTicketRequest(Booking.Client.BookingServiceRemote.Ticket obj) {
            this.obj = obj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTicketResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTicketResponse {
        
        public UpdateTicketResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTicket", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteTicketRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        public DeleteTicketRequest() {
        }
        
        public DeleteTicketRequest(int id) {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteTicketResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteTicketResponse {
        
        public DeleteTicketResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Booking.Client.BookingServiceRemote.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Booking.Client.BookingServiceRemote.IService>, Booking.Client.BookingServiceRemote.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Booking.Client.BookingServiceRemote.PostResponse Post(Booking.Client.BookingServiceRemote.PostRequest request) {
            return base.Channel.Post(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.PostResponse> PostAsync(Booking.Client.BookingServiceRemote.PostRequest request) {
            return base.Channel.PostAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetRouteResponse GetRoute(Booking.Client.BookingServiceRemote.GetRouteRequest request) {
            return base.Channel.GetRoute(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetRouteResponse> GetRouteAsync(Booking.Client.BookingServiceRemote.GetRouteRequest request) {
            return base.Channel.GetRouteAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreateCustomerResponse CreateCustomer(Booking.Client.BookingServiceRemote.CreateCustomerRequest request) {
            return base.Channel.CreateCustomer(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateCustomerResponse> CreateCustomerAsync(Booking.Client.BookingServiceRemote.CreateCustomerRequest request) {
            return base.Channel.CreateCustomerAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetCustomerResponse GetCustomer(Booking.Client.BookingServiceRemote.GetCustomerRequest request) {
            return base.Channel.GetCustomer(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetCustomerResponse> GetCustomerAsync(Booking.Client.BookingServiceRemote.GetCustomerRequest request) {
            return base.Channel.GetCustomerAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdateCustomerResponse UpdateCustomer(Booking.Client.BookingServiceRemote.UpdateCustomerRequest request) {
            return base.Channel.UpdateCustomer(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateCustomerResponse> UpdateCustomerAsync(Booking.Client.BookingServiceRemote.UpdateCustomerRequest request) {
            return base.Channel.UpdateCustomerAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeleteCustomerResponse DeleteCustomer(Booking.Client.BookingServiceRemote.DeleteCustomerRequest request) {
            return base.Channel.DeleteCustomer(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteCustomerResponse> DeleteCustomerAsync(Booking.Client.BookingServiceRemote.DeleteCustomerRequest request) {
            return base.Channel.DeleteCustomerAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetAllCustomersResponse GetAllCustomers(Booking.Client.BookingServiceRemote.GetAllCustomersRequest request) {
            return base.Channel.GetAllCustomers(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetAllCustomersResponse> GetAllCustomersAsync(Booking.Client.BookingServiceRemote.GetAllCustomersRequest request) {
            return base.Channel.GetAllCustomersAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreateBookingResponse CreateBooking(Booking.Client.BookingServiceRemote.CreateBookingRequest request) {
            return base.Channel.CreateBooking(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateBookingResponse> CreateBookingAsync(Booking.Client.BookingServiceRemote.CreateBookingRequest request) {
            return base.Channel.CreateBookingAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetBookingResponse GetBooking(Booking.Client.BookingServiceRemote.GetBookingRequest request) {
            return base.Channel.GetBooking(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetBookingResponse> GetBookingAsync(Booking.Client.BookingServiceRemote.GetBookingRequest request) {
            return base.Channel.GetBookingAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdateBookingResponse UpdateBooking(Booking.Client.BookingServiceRemote.UpdateBookingRequest request) {
            return base.Channel.UpdateBooking(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateBookingResponse> UpdateBookingAsync(Booking.Client.BookingServiceRemote.UpdateBookingRequest request) {
            return base.Channel.UpdateBookingAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeleteBookingResponse DeleteBooking(Booking.Client.BookingServiceRemote.DeleteBookingRequest request) {
            return base.Channel.DeleteBooking(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteBookingResponse> DeleteBookingAsync(Booking.Client.BookingServiceRemote.DeleteBookingRequest request) {
            return base.Channel.DeleteBookingAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreateCityResponse CreateCity(Booking.Client.BookingServiceRemote.CreateCityRequest request) {
            return base.Channel.CreateCity(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateCityResponse> CreateCityAsync(Booking.Client.BookingServiceRemote.CreateCityRequest request) {
            return base.Channel.CreateCityAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetCityResponse GetCity(Booking.Client.BookingServiceRemote.GetCityRequest request) {
            return base.Channel.GetCity(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetCityResponse> GetCityAsync(Booking.Client.BookingServiceRemote.GetCityRequest request) {
            return base.Channel.GetCityAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdateCityResponse UpdateCity(Booking.Client.BookingServiceRemote.UpdateCityRequest request) {
            return base.Channel.UpdateCity(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateCityResponse> UpdateCityAsync(Booking.Client.BookingServiceRemote.UpdateCityRequest request) {
            return base.Channel.UpdateCityAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeleteCityResponse DeleteCity(Booking.Client.BookingServiceRemote.DeleteCityRequest request) {
            return base.Channel.DeleteCity(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteCityResponse> DeleteCityAsync(Booking.Client.BookingServiceRemote.DeleteCityRequest request) {
            return base.Channel.DeleteCityAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreateDestinationResponse CreateDestination(Booking.Client.BookingServiceRemote.CreateDestinationRequest request) {
            return base.Channel.CreateDestination(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateDestinationResponse> CreateDestinationAsync(Booking.Client.BookingServiceRemote.CreateDestinationRequest request) {
            return base.Channel.CreateDestinationAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetDestinationResponse GetDestination(Booking.Client.BookingServiceRemote.GetDestinationRequest request) {
            return base.Channel.GetDestination(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetDestinationResponse> GetDestinationAsync(Booking.Client.BookingServiceRemote.GetDestinationRequest request) {
            return base.Channel.GetDestinationAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdateDestinationResponse UpdateDestination(Booking.Client.BookingServiceRemote.UpdateDestinationRequest request) {
            return base.Channel.UpdateDestination(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateDestinationResponse> UpdateDestinationAsync(Booking.Client.BookingServiceRemote.UpdateDestinationRequest request) {
            return base.Channel.UpdateDestinationAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeleteDestinationResponse DeleteDestination(Booking.Client.BookingServiceRemote.DeleteDestinationRequest request) {
            return base.Channel.DeleteDestination(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteDestinationResponse> DeleteDestinationAsync(Booking.Client.BookingServiceRemote.DeleteDestinationRequest request) {
            return base.Channel.DeleteDestinationAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetAllDestinationsResponse GetAllDestinations(Booking.Client.BookingServiceRemote.GetAllDestinationsRequest request) {
            return base.Channel.GetAllDestinations(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetAllDestinationsResponse> GetAllDestinationsAsync(Booking.Client.BookingServiceRemote.GetAllDestinationsRequest request) {
            return base.Channel.GetAllDestinationsAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreatePassengerResponse CreatePassenger(Booking.Client.BookingServiceRemote.CreatePassengerRequest request) {
            return base.Channel.CreatePassenger(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreatePassengerResponse> CreatePassengerAsync(Booking.Client.BookingServiceRemote.CreatePassengerRequest request) {
            return base.Channel.CreatePassengerAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetPassengerResponse GetPassenger(Booking.Client.BookingServiceRemote.GetPassengerRequest request) {
            return base.Channel.GetPassenger(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetPassengerResponse> GetPassengerAsync(Booking.Client.BookingServiceRemote.GetPassengerRequest request) {
            return base.Channel.GetPassengerAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdatePassengerResponse UpdatePassenger(Booking.Client.BookingServiceRemote.UpdatePassengerRequest request) {
            return base.Channel.UpdatePassenger(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdatePassengerResponse> UpdatePassengerAsync(Booking.Client.BookingServiceRemote.UpdatePassengerRequest request) {
            return base.Channel.UpdatePassengerAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeletePassengerResponse DeletePassenger(Booking.Client.BookingServiceRemote.DeletePassengerRequest request) {
            return base.Channel.DeletePassenger(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeletePassengerResponse> DeletePassengerAsync(Booking.Client.BookingServiceRemote.DeletePassengerRequest request) {
            return base.Channel.DeletePassengerAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetAllPassengersResponse GetAllPassengers(Booking.Client.BookingServiceRemote.GetAllPassengersRequest request) {
            return base.Channel.GetAllPassengers(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetAllPassengersResponse> GetAllPassengersAsync(Booking.Client.BookingServiceRemote.GetAllPassengersRequest request) {
            return base.Channel.GetAllPassengersAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreatePaymentResponse CreatePayment(Booking.Client.BookingServiceRemote.CreatePaymentRequest request) {
            return base.Channel.CreatePayment(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreatePaymentResponse> CreatePaymentAsync(Booking.Client.BookingServiceRemote.CreatePaymentRequest request) {
            return base.Channel.CreatePaymentAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetPaymentResponse GetPayment(Booking.Client.BookingServiceRemote.GetPaymentRequest request) {
            return base.Channel.GetPayment(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetPaymentResponse> GetPaymentAsync(Booking.Client.BookingServiceRemote.GetPaymentRequest request) {
            return base.Channel.GetPaymentAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdatePaymentResponse UpdatePayment(Booking.Client.BookingServiceRemote.UpdatePaymentRequest request) {
            return base.Channel.UpdatePayment(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdatePaymentResponse> UpdatePaymentAsync(Booking.Client.BookingServiceRemote.UpdatePaymentRequest request) {
            return base.Channel.UpdatePaymentAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeletePaymentResponse DeletePayment(Booking.Client.BookingServiceRemote.DeletePaymentRequest request) {
            return base.Channel.DeletePayment(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeletePaymentResponse> DeletePaymentAsync(Booking.Client.BookingServiceRemote.DeletePaymentRequest request) {
            return base.Channel.DeletePaymentAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreatePlaneResponse CreatePlane(Booking.Client.BookingServiceRemote.CreatePlaneRequest request) {
            return base.Channel.CreatePlane(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreatePlaneResponse> CreatePlaneAsync(Booking.Client.BookingServiceRemote.CreatePlaneRequest request) {
            return base.Channel.CreatePlaneAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetPlaneResponse GetPlane(Booking.Client.BookingServiceRemote.GetPlaneRequest request) {
            return base.Channel.GetPlane(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetPlaneResponse> GetPlaneAsync(Booking.Client.BookingServiceRemote.GetPlaneRequest request) {
            return base.Channel.GetPlaneAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdatePlaneResponse UpdatePlane(Booking.Client.BookingServiceRemote.UpdatePlaneRequest request) {
            return base.Channel.UpdatePlane(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdatePlaneResponse> UpdatePlaneAsync(Booking.Client.BookingServiceRemote.UpdatePlaneRequest request) {
            return base.Channel.UpdatePlaneAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeletePlaneResponse DeletePlane(Booking.Client.BookingServiceRemote.DeletePlaneRequest request) {
            return base.Channel.DeletePlane(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeletePlaneResponse> DeletePlaneAsync(Booking.Client.BookingServiceRemote.DeletePlaneRequest request) {
            return base.Channel.DeletePlaneAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetAllPlanesResponse GetAllPlanes(Booking.Client.BookingServiceRemote.GetAllPlanesRequest request) {
            return base.Channel.GetAllPlanes(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetAllPlanesResponse> GetAllPlanesAsync(Booking.Client.BookingServiceRemote.GetAllPlanesRequest request) {
            return base.Channel.GetAllPlanesAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreateRowResponse CreateRow(Booking.Client.BookingServiceRemote.CreateRowRequest request) {
            return base.Channel.CreateRow(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateRowResponse> CreateRowAsync(Booking.Client.BookingServiceRemote.CreateRowRequest request) {
            return base.Channel.CreateRowAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetRowResponse GetRow(Booking.Client.BookingServiceRemote.GetRowRequest request) {
            return base.Channel.GetRow(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetRowResponse> GetRowAsync(Booking.Client.BookingServiceRemote.GetRowRequest request) {
            return base.Channel.GetRowAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdateRowResponse UpdateRow(Booking.Client.BookingServiceRemote.UpdateRowRequest request) {
            return base.Channel.UpdateRow(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateRowResponse> UpdateRowAsync(Booking.Client.BookingServiceRemote.UpdateRowRequest request) {
            return base.Channel.UpdateRowAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeleteRowResponse DeleteRow(Booking.Client.BookingServiceRemote.DeleteRowRequest request) {
            return base.Channel.DeleteRow(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteRowResponse> DeleteRowAsync(Booking.Client.BookingServiceRemote.DeleteRowRequest request) {
            return base.Channel.DeleteRowAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreateSeatResponse CreateSeat(Booking.Client.BookingServiceRemote.CreateSeatRequest request) {
            return base.Channel.CreateSeat(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateSeatResponse> CreateSeatAsync(Booking.Client.BookingServiceRemote.CreateSeatRequest request) {
            return base.Channel.CreateSeatAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetSeatResponse GetSeat(Booking.Client.BookingServiceRemote.GetSeatRequest request) {
            return base.Channel.GetSeat(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetSeatResponse> GetSeatAsync(Booking.Client.BookingServiceRemote.GetSeatRequest request) {
            return base.Channel.GetSeatAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdateSeatResponse UpdateSeat(Booking.Client.BookingServiceRemote.UpdateSeatRequest request) {
            return base.Channel.UpdateSeat(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateSeatResponse> UpdateSeatAsync(Booking.Client.BookingServiceRemote.UpdateSeatRequest request) {
            return base.Channel.UpdateSeatAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeleteSeatResponse DeleteSeat(Booking.Client.BookingServiceRemote.DeleteSeatRequest request) {
            return base.Channel.DeleteSeat(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteSeatResponse> DeleteSeatAsync(Booking.Client.BookingServiceRemote.DeleteSeatRequest request) {
            return base.Channel.DeleteSeatAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreateSeatSchemaResponse CreateSeatSchema(Booking.Client.BookingServiceRemote.CreateSeatSchemaRequest request) {
            return base.Channel.CreateSeatSchema(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateSeatSchemaResponse> CreateSeatSchemaAsync(Booking.Client.BookingServiceRemote.CreateSeatSchemaRequest request) {
            return base.Channel.CreateSeatSchemaAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetSetSchemaResponse GetSetSchema(Booking.Client.BookingServiceRemote.GetSetSchemaRequest request) {
            return base.Channel.GetSetSchema(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetSetSchemaResponse> GetSetSchemaAsync(Booking.Client.BookingServiceRemote.GetSetSchemaRequest request) {
            return base.Channel.GetSetSchemaAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdateSeatSchemaResponse UpdateSeatSchema(Booking.Client.BookingServiceRemote.UpdateSeatSchemaRequest request) {
            return base.Channel.UpdateSeatSchema(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateSeatSchemaResponse> UpdateSeatSchemaAsync(Booking.Client.BookingServiceRemote.UpdateSeatSchemaRequest request) {
            return base.Channel.UpdateSeatSchemaAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeleteSeatSchemaResponse DeleteSeatSchema(Booking.Client.BookingServiceRemote.DeleteSeatSchemaRequest request) {
            return base.Channel.DeleteSeatSchema(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteSeatSchemaResponse> DeleteSeatSchemaAsync(Booking.Client.BookingServiceRemote.DeleteSeatSchemaRequest request) {
            return base.Channel.DeleteSeatSchemaAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.CreateTicketResponse CreateTicket(Booking.Client.BookingServiceRemote.CreateTicketRequest request) {
            return base.Channel.CreateTicket(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.CreateTicketResponse> CreateTicketAsync(Booking.Client.BookingServiceRemote.CreateTicketRequest request) {
            return base.Channel.CreateTicketAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.GetTicketResponse GetTicket(Booking.Client.BookingServiceRemote.GetTicketRequest request) {
            return base.Channel.GetTicket(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.GetTicketResponse> GetTicketAsync(Booking.Client.BookingServiceRemote.GetTicketRequest request) {
            return base.Channel.GetTicketAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.UpdateTicketResponse UpdateTicket(Booking.Client.BookingServiceRemote.UpdateTicketRequest request) {
            return base.Channel.UpdateTicket(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.UpdateTicketResponse> UpdateTicketAsync(Booking.Client.BookingServiceRemote.UpdateTicketRequest request) {
            return base.Channel.UpdateTicketAsync(request);
        }
        
        public Booking.Client.BookingServiceRemote.DeleteTicketResponse DeleteTicket(Booking.Client.BookingServiceRemote.DeleteTicketRequest request) {
            return base.Channel.DeleteTicket(request);
        }
        
        public System.Threading.Tasks.Task<Booking.Client.BookingServiceRemote.DeleteTicketResponse> DeleteTicketAsync(Booking.Client.BookingServiceRemote.DeleteTicketRequest request) {
            return base.Channel.DeleteTicketAsync(request);
        }
    }
}
